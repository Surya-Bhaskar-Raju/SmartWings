[
  {
    "ContainingType": "SmartWings.API.Controllers.AuthController",
    "Method": "UserExists",
    "RelativePath": "api/auth/exists",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "SmartWings.Application.DTO.UserExistsDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartWings.API.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "login",
        "Type": "SmartWings.Application.DTO.UserLoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartWings.API.Controllers.AuthController",
    "Method": "Logout",
    "RelativePath": "api/auth/logout",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartWings.API.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "SmartWings.Application.DTO.UserRegisterDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartWings.API.Controllers.AuthController",
    "Method": "RequestOtp",
    "RelativePath": "api/auth/request-otp",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "SmartWings.Application.DTO.RequestOtpDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartWings.API.Controllers.AuthController",
    "Method": "RequestOtpPreRegistration",
    "RelativePath": "api/auth/request-otp-pre-registration",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "SmartWings.Application.DTO.RequestOtpPreRegistrationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartWings.API.Controllers.AuthController",
    "Method": "ResetPassword",
    "RelativePath": "api/auth/reset-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "SmartWings.Application.DTO.ResetPasswordWithOtpDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartWings.API.Controllers.AuthController",
    "Method": "VerifyOtp",
    "RelativePath": "api/auth/verify-otp",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "SmartWings.Application.DTO.VerifyOtpDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartWings.API.Controllers.AuthController",
    "Method": "VerifyOtpPreRegistration",
    "RelativePath": "api/auth/verify-otp-pre-registration",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "SmartWings.Application.DTO.VerifyOtpPreRegistrationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartWings.API.Controllers.BookingController",
    "Method": "BookFlight",
    "RelativePath": "api/Booking/book",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "SmartWings.Application.DTO.BookingRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartWings.API.Controllers.BookingController",
    "Method": "CancelBooking",
    "RelativePath": "api/Booking/cancel/{referenceId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "referenceId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartWings.API.Controllers.BookingController",
    "Method": "TrackBooking",
    "RelativePath": "api/Booking/track/{referenceId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "referenceId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartWings.API.Controllers.BookingController",
    "Method": "GetBookingsByUserId",
    "RelativePath": "api/Booking/user/{userId}/bookings",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartWings.API.Controllers.DashboardController",
    "Method": "GetBookingsByFlightNumberAndDepartureDate",
    "RelativePath": "api/Dashboard/bookings/{flightNumber}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "flightNumber",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "departureDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "aircraftModel",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartWings.API.Controllers.DashboardController",
    "Method": "GetAllflightWithAircraftModel",
    "RelativePath": "api/Dashboard/flight-with-model/{aircraftmodel}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "aircraftmodel",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[SmartWings.Application.DTO.FlightwithmodelDto, SmartWings.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartWings.API.Controllers.DashboardController",
    "Method": "GetRevenueByAircraftModel",
    "RelativePath": "api/Dashboard/revenue/{aircraftModel}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "aircraftModel",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartWings.API.Controllers.DashboardController",
    "Method": "GetUpcomingFlights",
    "RelativePath": "api/Dashboard/upcoming-flights",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "fromDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[SmartWings.Application.DTO.UpcomingFlightDto, SmartWings.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartWings.API.Controllers.FlightController",
    "Method": "ScheduleFlight",
    "RelativePath": "api/flights",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "SmartWings.Application.DTO.FlightCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SmartWings.Application.DTO.FlightReadDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartWings.API.Controllers.FlightController",
    "Method": "GetAllFlights",
    "RelativePath": "api/flights",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "origin",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "destination",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "departureDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[SmartWings.Application.DTO.FlightReadDto, SmartWings.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartWings.API.Controllers.FlightController",
    "Method": "UpdateFlight",
    "RelativePath": "api/flights/{flightId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "flightId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "SmartWings.Application.DTO.FlightUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SmartWings.Application.DTO.FlightReadDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartWings.API.Controllers.FlightController",
    "Method": "GetFlightById",
    "RelativePath": "api/flights/{flightId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "flightId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SmartWings.Application.DTO.FlightReadDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartWings.API.Controllers.FlightController",
    "Method": "AddAircraft",
    "RelativePath": "api/flights/aircrafts",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "SmartWings.Application.DTO.AirCraftCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SmartWings.Application.DTO.AirCraftReadDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartWings.API.Controllers.FlightController",
    "Method": "GetAllAircrafts",
    "RelativePath": "api/flights/aircrafts",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[SmartWings.Application.DTO.AirCraftReadDto, SmartWings.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartWings.API.Controllers.FlightController",
    "Method": "UpdateAircraft",
    "RelativePath": "api/flights/aircrafts/{aircraftId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "aircraftId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "SmartWings.Application.DTO.AirCraftUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SmartWings.Application.DTO.AirCraftReadDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartWings.API.Controllers.FlightController",
    "Method": "DeleteAircraft",
    "RelativePath": "api/flights/aircrafts/{aircraftId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "aircraftId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartWings.API.Controllers.FlightController",
    "Method": "GetAircraftById",
    "RelativePath": "api/flights/aircrafts/{aircraftId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "aircraftId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SmartWings.Application.DTO.AirCraftReadDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartWings.API.Controllers.FlightController",
    "Method": "GetAvailableFlights",
    "RelativePath": "api/flights/available",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[SmartWings.Application.DTO.FlightReadDto, SmartWings.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartWings.API.Controllers.NotificationController",
    "Method": "GetNotificationsByUserId",
    "RelativePath": "api/Notification/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[SmartWings.Domain.Notification, SmartWings.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SmartWings.API.Controllers.PaymentController",
    "Method": "ProcessPayment",
    "RelativePath": "api/Payment/process",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "SmartWings.Application.DTOs.PaymentRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartWings.API.Controllers.UserController",
    "Method": "GetAllUsers",
    "RelativePath": "api/users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartWings.API.Controllers.UserController",
    "Method": "GetUserById",
    "RelativePath": "api/users/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartWings.API.Controllers.UserController",
    "Method": "UpdateUser",
    "RelativePath": "api/users/{userId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "SmartWings.Application.DTO.UpdateUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SmartWings.API.Controllers.UserController",
    "Method": "DeleteUserByEmail",
    "RelativePath": "api/users/by-email",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "SmartWings.Application.DTO.UserDeleteByEmailDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]